name: Deploy Pages
on:
  workflow_run:
    workflows: [ portfolio-ci, Coverage ]
    branches: [ main ]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
      - name: Determine reports artifact
        if: github.event_name == 'workflow_run'
        id: reports_meta
        run: |
          if [ "${{ github.event.workflow_run.name }}" = "Coverage" ]; then
            echo "artifact_name=coverage-report" >> "$GITHUB_OUTPUT"
          else
            echo "artifact_name=ci-reports" >> "$GITHUB_OUTPUT"
          fi

      - name: Check reports artifact
        if: github.event_name == 'workflow_run'
        id: reports_lookup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          artifact_name='${{ steps.reports_meta.outputs.artifact_name }}'
          if ! response=$(curl -sS -H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts"); then
            echo "found=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          artifact_id=$(echo "$response" | jq -r ".artifacts[] | select(.name == \"${artifact_name}\") | .id" | head -n 1)
          if [ -n "$artifact_id" ] && [ "$artifact_id" != "null" ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "artifact_id=$artifact_id" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Download CI reports
        if: github.event_name == 'workflow_run' && steps.reports_lookup.outputs.found == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p ci-reports
          curl -L -sS \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ steps.reports_lookup.outputs.artifact_id }}/zip" \
            --output ci-reports.zip
          unzip -q ci-reports.zip -d ci-reports
          rm ci-reports.zip
      - name: Integrate CI reports into site
        if: github.event_name == 'workflow_run' && steps.reports_lookup.outputs.found == 'true'
        run: |
          set -euo pipefail
          mkdir -p _site/reports
          if [ -d ci-reports/reports ]; then
            cp -a ci-reports/reports/. _site/reports/
          else
            cp -a ci-reports/. _site/reports/
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/configure-pages@v5
      - id: deployment
        uses: actions/deploy-pages@v4

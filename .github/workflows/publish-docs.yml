name: Publish Docs (GitHub Pages)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.pages_status.outputs.actions_ready }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check GitHub Pages status
        id: pages_status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: repo } = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            let buildType = "disabled";

            try {
              const { data: pages } = await github.rest.repos.getPages({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              buildType = pages.build_type ?? "legacy";
            } catch (error) {
              if (error.status === 404) {
                core.info("GitHub Pages は GitHub Actions を使用するように設定されていますが、まだデプロイが完了していません。");
                buildType = "workflow";
              } else if (error.status === 403) {
                core.info("GitHub Pages API が 403 を返しました。無効化されているものとして扱います。");
              } else {
                throw error;
              }
            }

            const actionsReady = buildType === "workflow";
            core.info(`GitHub Pages build_type: ${buildType}`);
            core.info(`GitHub Pages has_pages: ${repo.has_pages}`);
            core.setOutput("has_pages", String(repo.has_pages));
            core.setOutput("build_type", buildType);
            core.setOutput("actions_ready", String(actionsReady));

      - name: Setup Pages
        if: steps.pages_status.outputs.build_type == 'workflow'
        uses: actions/configure-pages@v3

      - name: Upload documentation artifact
        if: steps.pages_status.outputs.build_type == 'workflow'
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs

      - name: GitHub Pages status notice
        if: steps.pages_status.outputs.build_type != 'workflow'
        run: |
          case "${{ steps.pages_status.outputs.build_type }}" in
            disabled)
              echo "GitHub Pages が無効化されています。"
              echo "Settings > Pages で GitHub Pages を有効化してください。"
              echo "Build and deployment に 'GitHub Actions' を選択してください。"
              ;;
            *)
              echo "GitHub Pages の配信方法として 'GitHub Actions' が選択されていません。"
              echo "Build and deployment に 'GitHub Actions' を選択すると自動デプロイが有効になります。"
              ;;
          esac
          echo "現状ではドキュメントの自動デプロイはスキップされます。"

  deploy:
    if: needs.build.outputs.pages_enabled == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

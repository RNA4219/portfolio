# .github/workflows/ci.yml
name: portfolio-ci

on: [push, pull_request]

# 同じブランチで複数実行されたら古い方をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name == 'workflow_dispatch' && github.run_id || '' }}
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

jobs:
  node-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'   # ← npm依存キャッシュを有効化

      - name: Install deps & Playwright browsers
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
          npx playwright install --with-deps

      - name: Validate cases JSON
        run: npm run spec:validate

      - name: Generate E2E tests
        run: npm run e2e:gen

      - name: Run Playwright
        run: npm test
        env:
          BASE_URL: http://localhost:5173

      - name: Analyze JUnit
        if: always()
        run: npm run ci:analyze

      - name: Run shadow pipeline integration test
        if: always()
        run: node --test tests/e2e-shadow.test.mjs

      - name: Create issue (stub)
        if: always()
        run: npm run ci:issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload node test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-test-artifacts
          if-no-files-found: warn
          path: |
            junit-results.xml
            database.json
            projects/03-ci-flaky/out/**
            test-results/**

  python-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: projects/04-llm-adapter-shadow/requirements.txt

      - name: Install Python lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r projects/04-llm-adapter-shadow/requirements.txt
          pip install ruff mypy

      - name: Ruff lint (fix mode)
        if: always()
        run: |
          ruff check projects/04-llm-adapter-shadow/src \
            --output-format=full \
            --fix \
            --exit-non-zero-on-fix

      - name: Mypy type check (strict)
        if: always()
        run: mypy projects/04-llm-adapter-shadow/src --pretty --strict

  python-tests:
    uses: ./.github/workflows/python-pytest.yml
    secrets: inherit

  reports:
    needs:
      - node-tests
      - python-tests
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Download node test artifacts
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: node-test-artifacts
          if-no-files-found: warn
          path: .

      - name: Download Python coverage artifacts
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: python-coverage-artifacts
          if-no-files-found: warn
          path: .

      - name: Build CI reports bundle
        run: node scripts/build-ci-reports.mjs

      - name: Upload CI reports for Pages
        uses: actions/upload-pages-artifact@v4
        with:
          name: ci-reports
          path: reports
